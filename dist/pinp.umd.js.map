{"version":3,"file":"pinp.umd.js","sources":["../src/utils/noop.js","../src/abstractions/Item.js","../src/index.js","../src/utils/object-is-dom-element.js"],"sourcesContent":["export default function () {}\n","import Draggabilly from 'draggabilly'\nimport noop from '../utils/noop'\nimport roundTo from '../utils/math-round-to'\n\nexport default class Item {\n  constructor (element, {\n    container = document.documentElement,\n    grid = [1, 1],\n    onMove = noop\n  } = {}) {\n    if (!element) {\n      throw new TypeError(`Item constructor expects HTMLElement, ${typeof element} given`)\n    }\n\n    this.grid = grid\n    this.onMove = onMove.bind(this)\n\n    this.element = element\n    this.element.style.position = 'absolute'\n    this.container = container\n\n    this.dragInstance = new Draggabilly(element, { grid, containment: container })\n    this.dragInstance.on('dragEnd', this.onMove)\n  }\n\n  destroy () {\n    this.dragInstance.destroy()\n  }\n\n  collide (item) {\n    return this.collideOnXAxis(item) && this.collideOnYAxis(item)\n  }\n\n  collideOnYAxis (item) {\n    if (!item) return\n    if (item === this) return false\n\n    return this.box.xmax > item.box.xmin && this.box.xmin < item.box.xmax\n  }\n\n  collideOnXAxis (item) {\n    if (!item) return\n    if (item === this) return false\n\n    return this.box.ymax > item.box.ymin && this.box.ymin < item.box.ymax\n  }\n\n  move (x, y) {\n    if (this.isDragged) return\n    this.dragInstance.setPosition(x, y)\n  }\n\n  get box () {\n    const { width, height } = this.element.getBoundingClientRect()\n    const x = this.dragInstance.position.x\n    const y = this.dragInstance.position.y\n    return {\n      x,\n      y,\n      width,\n      height,\n      xmin: x,\n      ymin: y,\n      xmax: x + width,\n      ymax: y + height,\n      center: {\n        x: x + width / 2,\n        y: y + height / 2\n      }\n    }\n  }\n\n  get index () { return this._index }\n  set index (i) { // DEBUG\n    this._index = i\n    this.element.innerHTML = `#${i}`\n  }\n\n  write (text, append = false) {\n    this._text = append\n      ? this._text + ' ' + text\n      : text\n    this.element.innerHTML = this._text\n  }\n}\n","import Item from './abstractions/Item'\nimport isDomElement from './utils/object-is-dom-element'\n\nexport default ({\n  grid = [50, 50],\n  container = '.pinp-container',\n  itemSelector = '.pinp-item'\n} = {}) => {\n  container = isDomElement(container)\n    ? container\n    : document.querySelector(container)\n\n  const itemElements = container.querySelectorAll(itemSelector)\n  const items = []\n  for (let i = 0; i < itemElements.length; i++) add(itemElements[i])\n\n  const api = {\n    add,\n    update\n  }\n\n  return api\n\n  function add (el) {\n    const item = new Item(el, {\n      container,\n      onMove: update,\n      grid\n    })\n    items.push(item)\n  }\n\n  function update () {\n    window.requestAnimationFrame(() => {\n      updatePosition(items)\n      updateContainerSize(items)\n    })\n  }\n\n  function updatePosition (items, forceLeft = false) {\n    const itemsSortedLeftToRight = items.sort((a, b) => a.box.xmax - b.box.xmax)\n    for (let index = 0; index < itemsSortedLeftToRight.length; index++) {\n      const current = itemsSortedLeftToRight[index]\n      const leftOfCurrent = itemsSortedLeftToRight.slice(0, index)\n      const leftOfCurrentOnSameAxis = leftOfCurrent.filter(current.collideOnXAxis.bind(current))\n      const previous = getClusterBox(leftOfCurrentOnSameAxis)\n\n      const noCollide = !itemsSortedLeftToRight.some(current.collide.bind(current))\n      if (noCollide) {\n        current.index = ''\n        continue\n      }\n\n      current.index = index\n\n      const x = forceLeft\n        ? previous.xmax\n        : (previous.xmax || current.box.xmin)\n      current.move(x, current.box.ymin)\n    }\n  }\n\n  function getClusterBox (items) {\n    let x = 0\n    let y = 0\n    let width = 0\n    let height = 0\n\n    items.forEach(({ box }) => {\n      x = Math.min(x, box.x)\n      y = Math.min(y, box.y)\n      width = Math.max(width, box.x + box.width)\n      height = Math.max(height, box.y + box.height)\n    })\n\n    return {\n      x,\n      y,\n      width,\n      height,\n      xmin: x,\n      xmax: x + width,\n      ymin: y,\n      ymax: y + height\n    }\n  }\n\n  function updateContainerSize (items) {\n    container.style.width = getClusterBox(items).width + 'px'\n  }\n}\n","export default o => (typeof window.HTMLElement === 'object')\n  ? o instanceof window.HTMLElement\n  : o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n"],"names":["Item","constructor","element","ref","document","documentElement","noop","TypeError","grid","onMove","bind","this","style","position","container","dragInstance","Draggabilly","on","destroy","collide","item","collideOnXAxis","collideOnYAxis","box","xmax","xmin","ymax","ymin","move","x","y","isDragged","setPosition","prototypeAccessors","getBoundingClientRect","width","height","center","index","_index","i","innerHTML","write","text","append","_text","o","itemElements","window","HTMLElement","nodeType","nodeName","querySelector","querySelectorAll","itemSelector","items","length","add","update","el","push","requestAnimationFrame","forceLeft","itemsSortedLeftToRight","sort","a","b","current","previous","getClusterBox","slice","filter","some","updatePosition","updateContainerSize","forEach","Math","min","max"],"mappings":"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"}